definitions:
  models.PhotoCreateInput:
    properties:
      caption:
        type: string
      photoURL:
        type: string
      title:
        type: string
      userID:
        type: integer
    type: object
  models.PhotoCreateOutput:
    properties:
      caption:
        type: string
      created_at:
        type: string
      id:
        type: integer
      photo_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.PhotoGetOutput:
    properties:
      caption:
        type: string
      created_at:
        type: string
      id:
        type: integer
      photo_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.UserRegisterOutput'
    type: object
  models.SocialMediaCreateInput:
    properties:
      name:
        type: string
      social_media_url:
        type: string
      userID:
        type: integer
    type: object
  models.SocialMediaCreateOutput:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.SocialMediaDeleteOutput:
    properties:
      message:
        type: string
    type: object
  models.SocialMediaGetOutput:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.UserRegisterOutput'
    type: object
  models.SocialMediaUpdateInput:
    properties:
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      userID:
        type: integer
    type: object
  models.SocialMediaUpdateOutput:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.UserLoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.UserLoginOutput:
    properties:
      token:
        type: string
    type: object
  models.UserRegisterInput:
    properties:
      age:
        type: integer
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.UserRegisterOutput:
    properties:
      age:
        type: integer
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/photos:
    get:
      description: Get all photos
      parameters:
      - description: 'format: Bearer token-here'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PhotoGetOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all photos
      tags:
      - photos
    post:
      consumes:
      - multipart/form-data
      description: Create photos
      parameters:
      - description: create photo
        in: body
        name: models.PhotoCreateInput
        required: true
        schema:
          $ref: '#/definitions/models.PhotoCreateInput'
      - description: 'format: Bearer token-here'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.PhotoCreateOutput'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "413":
          description: Request Entity Too Large
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create photos
      tags:
      - photos
  /api/v1/social-medias:
    get:
      description: Get all social media
      parameters:
      - description: 'format: Bearer token-here'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SocialMediaGetOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all social media
      tags:
      - socialMedias
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: Create social media
      parameters:
      - description: create social media
        in: body
        name: models.SocialMediaCreateInput
        required: true
        schema:
          $ref: '#/definitions/models.SocialMediaCreateInput'
      - description: 'format: Bearer token-here'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SocialMediaCreateOutput'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create social media
      tags:
      - socialMedias
  /api/v1/social-medias/:socialMediaId:
    delete:
      description: Delete social media
      parameters:
      - description: delete social media by id
        in: path
        name: socialMediaId
        required: true
        type: string
      - description: 'format: Bearer token-here'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SocialMediaDeleteOutput'
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete social media
      tags:
      - socialMedias
    get:
      description: Get one social media by id
      parameters:
      - description: get social media by id
        in: path
        name: socialMediaId
        required: true
        type: string
      - description: 'format: Bearer token-here'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SocialMediaGetOutput'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get one social media by id
      tags:
      - socialMedias
    put:
      consumes:
      - application/json
      - multipart/form-data
      description: Update social media
      parameters:
      - description: update social media by id
        in: path
        name: socialMediaId
        required: true
        type: string
      - description: update social media
        in: body
        name: models.SocialMediaUpdateInput
        required: true
        schema:
          $ref: '#/definitions/models.SocialMediaUpdateInput'
      - description: 'format: Bearer token-here'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SocialMediaUpdateOutput'
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update social media
      tags:
      - socialMedias
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: User login
      parameters:
      - description: login user
        in: body
        name: models.UserLoginInput
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserLoginOutput'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - users
  /api/v1/users/register:
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: Register new user
      parameters:
      - description: register user
        in: body
        name: models.UserRegisterInput
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserRegisterOutput'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - users
swagger: "2.0"
